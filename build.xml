<!-- 
/** roomstore - an irc journaller using cassandra. 
  * Copyright 2011-2014 MeBigFatGuy.com 
  * Copyright 2011-2014 Dave Brosius 
  * 
  * Licensed under the Apache License, Version 2.0 (the "License"); 
  * you may not use this file except in compliance with the License. 
  * You may obtain a copy of the License at
  * 
  * http://www.apache.org/licenses/LICENSE-2.0 
  * 
  * Unless required by applicable law or agreed to in writing, 
  * software distributed under the License is distributed on an "AS IS" BASIS, 
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
  * See the License for the specific language governing permissions and limitations 
  * under the License. 
  */ 
-->

<project name="roomstore" default="info">
	<property file="build.properties"/>
	<property file="version.properties" />

	<property name="src.dir" value="${basedir}/src" />
	<property name="target.dir" value="${basedir}/target" />
	<property name="classes.dir" value="${target.dir}/classes" />
	<property name="lib.dir" value="${basedir}/lib" />
	<property name="javadoc.dir" value="${target.dir}/javadoc" />
	<property name="javac.source" value="1.6" />
	<property name="javac.target" value="1.6" />
	<property name="javac.deprecation" value="on" />
	<property name="javac.debug" value="on" />

	<property name="roomstore.version" value="0.1.0" />

	<target name="clean" description="removes all generated collateral">
		<delete dir="${target.dir}" />
	</target>

	<path id="roomstore.classpath">
		<pathelement location="${lib.dir}/cassandra-driver-core-${cassandra-driver-core.version}.jar" />
        <pathelement location="${lib.dir}/cassandra-all-${cassandra-all.version}.jar" />
        <pathelement location="${lib.dir}/snappy-java-${snappy-java.version}.jar" />
		<pathelement location="${lib.dir}/slf4j-api-${slf4j-api.version}.jar" />
        <pathelement location="${lib.dir}/commons-cli-${commons-cli.version}.jar" />
        <pathelement location="${lib.dir}/guava-${guava.version}.jar" />
        <pathelement location="${lib.dir}/netty-${netty.version}.jar" />
        <pathelement location="${lib.dir}/metrics-core-${metrics-core.version}.jar" />
        <pathelement location="${lib.dir}/jackson-core-asl-${jackson-core-asl.version}.jar" />
        <pathelement location="${lib.dir}/jackson-mapper-asl-${jackson-mapper-asl.version}.jar" />
        <pathelement location="${lib.dir}/libthrift-${libthrift.version}.jar" />
		<pathelement location="${lib.dir}/pircbot-${pircbot.version}.jar" />
	</path>
	
	<target name="info">
        <echo message="Roomstore - an irc journaller using cassandra"/>
        <echo message=""/>
        <echo message="    this project uses yank (https://github.com/mebigfatguy/yank) for dependency management"/>
        <echo message="    download yank.jar and place in ant/lib directory"/>
        <echo message="    http://search.maven.org/#artifactdetails%7Ccom.mebigfatguy.yank%7Cyank%7C0.4.2%7Cjar"/>
    </target>
    
	<target name="yank" xmlns:yank="antlib:com.mebigfatguy.yank">
        <mkdir dir="${lib.dir}" />
        <yank:yank yankFile="${basedir}/yank.xls" destination="${lib.dir}" source="true">
            <server url="http://repo1.maven.org/maven2" />
            <generateVersions propertyFileName="${basedir}/version.properties" />
        </yank:yank>
    </target>

	<target name="-init" depends="yank" description="prepares repository for a build">
		<mkdir dir="${classes.dir}" />
		<mkdir dir="${javadoc.dir}" />
		<mkdir dir="${lib.dir}" />
	</target>

	<target name="compile" depends="-init" description="compiles java files">
		<javac srcdir="${src.dir}" destdir="${classes.dir}" source="${javac.source}"
			target="${javac.target}" deprecation="${javac.deprecation}" debug="${javac.debug}"
			includeantruntime="false">
			<classpath refid="roomstore.classpath" />
		</javac>
	</target>

	<target name="srczip" description="builds the source distribution zip file">
		<zip destfile="${target.dir}/roomstore-src-${roomstore.version}.zip"
			basedir="${basedir}">
			<fileset dir="${src.dir}">
				<include name="**/*.java" />
				<include name="**/*.xml" />
				<include name="**/*.xsd" />
				<include name="**/*.license" />
				<include name="**/*.txt" />
				<include name="lib/*.jar" />
			</fileset>
		</zip>
	</target>

	<target name="javadoc" depends="-init"
		description="build the javadoc for the project">
		<javadoc packagenames="com.mebigfatguy.*" sourcepath="${src.dir}"
			classpathref="roomstore.classpath" destdir="${javadoc.dir}"
			windowtitle="roomstore api">
			<doctitle><![CDATA[<h1>roomstore javadoc</h1>]]></doctitle>
			<bottom><![CDATA[<i>Copyright &#169; 2011-2014 MeBigFatGuy.com. All Rights Reserved.</i>]]></bottom>
		</javadoc>
	</target>

	<target name="build" depends="clean, -init, compile"
		description="compiles the code">
	</target>

	<target name="jar" depends="build" description="produces the roomstore jar file">
		<jar destfile="${target.dir}/roomstore-${roomstore.version}.jar">
			<fileset dir="${classes.dir}">
				<include name="**/*.class" />
			</fileset>
			<manifest>
				<attribute name="roomstore.version" value="${roomstore.version}" />
                <attribute name="Main-Class" value="com.mebigfatguy.roomstore.RoomStore"/>
				<attribute name="Application-Name" value="RoomStore" />
                <attribute name="Permissions" value="all-permissions" />
                <attribute name="Codebase" value="*" />
				<attribute name="Bundle-ManifestVersion" value="2" />
				<attribute name="Bundle-Name" value="roomstore plugin" />
				<attribute name="Bundle-SymbolicName" value="roomstore; singleton:=true" />
				<attribute name="Bundle.version" value="${roomstore.version}" />
				<attribute name="Bundle-ClassPath" value="." />
				<attribute name="Bundle-Vendor" value="roomstore project" />
				<attribute name="Bundle-ActivationPolicy" value="lazy" />
			</manifest>
		</jar>
	</target>

	<target name="release" depends="build, srczip, javadoc"
		description="prepares everything for a release" />

	<target name="run" depends="jar" description="run roomstore against irc.freenode.net's #cassandra, #cassandra-dev">
		<java classname="com.mebigfatguy.roomstore.RoomStore" fork="true" maxmemory="256m">
            <arg value="-endpoints"/>
            <arg value="127.0.0.1"/>
            <arg value="-channels"/>
			<arg value="#cassandra"/>
			<arg value="#cassandra-dev"/>
			<arg value="-irc_server"/>
			<arg value="irc.freenode.net"/>
			<arg value="-nick"/>
			<arg value="roomstore"/>
			<classpath>
				<pathelement location="${basedir}/roomstore-${roomstore.version}.jar"/>
				<pathelement location="${lib.dir}/commons-cli-${commons-cli.version}.jar"/>
                <pathelement location="${lib.dir}/cassandra-driver-core-${cassandra-driver.version}.jar" />
                <pathelement location="${lib.dir}/cassandra-all-${cassandra.version}.jar" />
                <pathelement location="${lib.dir}/snappy-java-${snappy.version}.jar" />
                <pathelement location="${lib.dir}/slf4j-api-${slf4j-api.version}.jar" />
                <pathelement location="${lib.dir}/guava-${guava.version}.jar" />
                <pathelement location="${lib.dir}/netty-${netty.version}.jar" />
                <pathelement location="${lib.dir}/metrics-core-${yammer.version}.jar" />
                <pathelement location="${lib.dir}/jackson-core-asl-${jackson-core.version}.jar" />
                <pathelement location="${lib.dir}/jackson-mapper-asl-${jackson-mapper.version}.jar" />
                <pathelement location="${lib.dir}/libthrift-${libthrift.version}.jar" />
				<pathelement location="${lib.dir}/pircbot-${pircbot.version}.jar" />
			</classpath>
		</java>
 	</target>
</project>
